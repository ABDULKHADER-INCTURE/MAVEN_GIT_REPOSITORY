<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="77" started-at="2016-12-05T14:21:02Z" finished-at="2016-12-05T14:21:02Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="77" started-at="2016-12-05T14:21:02Z" finished-at="2016-12-05T14:21:02Z">
      <class name="testCases.Framework_001">
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:testCases.Framework_001@4bec1f0c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-12-05T19:51:02Z" finished-at="2016-12-05T19:51:02Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[android/util/Log]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: android/util/Log
	at org.slf4j.impl.AndroidLoggerAdapter.isLoggable(AndroidLoggerAdapter.java:543)
	at org.slf4j.impl.AndroidLoggerAdapter.log(AndroidLoggerAdapter.java:537)
	at org.slf4j.impl.AndroidLoggerAdapter.info(AndroidLoggerAdapter.java:281)
	at org.slf4j.helpers.MarkerIgnoringBase.info(MarkerIgnoringBase.java:95)
	at org.apache.log4j.Category.differentiatedLog(Category.java:203)
	at org.apache.log4j.Category.info(Category.java:234)
	at utility.Log.startTestCase(Log.java:9)
	at testCases.Framework_001.beforeMethod(Framework_001.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1129)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:746)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1264)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1189)
	at org.testng.TestNG.runSuites(TestNG.java:1104)
	at org.testng.TestNG.run(TestNG.java:1076)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: java.lang.ClassNotFoundException: android.util.Log
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 35 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="main()[pri:0, instance:testCases.Framework_001@4bec1f0c]" name="main" duration-ms="1" started-at="2016-12-05T19:51:02Z" finished-at="2016-12-05T19:51:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:testCases.Framework_001@4bec1f0c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-12-05T19:51:02Z" finished-at="2016-12-05T19:51:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.Framework_001 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
